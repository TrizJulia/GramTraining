// <auto-generated />
using System;
using GramTrainingCoreAngular.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GramTrainingCoreAngular.Migrations
{
    [DbContext(typeof(GrDbContext))]
    [Migration("20190916063204_FixQuestionAnswerForeignKey_SeedQuestionAnswer")]
    partial class FixQuestionAnswerForeignKey_SeedQuestionAnswer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GramTrainingCoreAngular.Domain.Questions.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(3000);

                    b.HasKey("Id");

                    b.ToTable("Answer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Text = "What?"
                        },
                        new
                        {
                            Id = 2,
                            Text = "Who?"
                        },
                        new
                        {
                            Id = 3,
                            Text = "Where?"
                        },
                        new
                        {
                            Id = 4,
                            Text = "When?"
                        },
                        new
                        {
                            Id = 5,
                            Text = "Why?"
                        },
                        new
                        {
                            Id = 6,
                            Text = "Which?"
                        },
                        new
                        {
                            Id = 7,
                            Text = "What time?"
                        },
                        new
                        {
                            Id = 8,
                            Text = "How much?"
                        });
                });

            modelBuilder.Entity("GramTrainingCoreAngular.Domain.Questions.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("QuestionText")
                        .IsRequired();

                    b.Property<int>("RightAnswerIndex");

                    b.Property<int?>("RuleId");

                    b.HasKey("Id");

                    b.HasIndex("RuleId");

                    b.ToTable("Question");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuestionText = "Де?",
                            RightAnswerIndex = 2
                        },
                        new
                        {
                            Id = 2,
                            QuestionText = "Хто?",
                            RightAnswerIndex = 1
                        });
                });

            modelBuilder.Entity("GramTrainingCoreAngular.Domain.Questions.QuestionAnswer", b =>
                {
                    b.Property<int>("QuestionId");

                    b.Property<int>("AnswerId");

                    b.Property<int>("Id");

                    b.HasKey("QuestionId", "AnswerId");

                    b.HasIndex("AnswerId");

                    b.ToTable("QuestionAnswer");

                    b.HasData(
                        new
                        {
                            QuestionId = 1,
                            AnswerId = 1,
                            Id = 1
                        },
                        new
                        {
                            QuestionId = 1,
                            AnswerId = 2,
                            Id = 2
                        },
                        new
                        {
                            QuestionId = 1,
                            AnswerId = 3,
                            Id = 3
                        },
                        new
                        {
                            QuestionId = 1,
                            AnswerId = 4,
                            Id = 4
                        },
                        new
                        {
                            QuestionId = 1,
                            AnswerId = 5,
                            Id = 5
                        },
                        new
                        {
                            QuestionId = 1,
                            AnswerId = 6,
                            Id = 6
                        },
                        new
                        {
                            QuestionId = 1,
                            AnswerId = 7,
                            Id = 7
                        },
                        new
                        {
                            QuestionId = 1,
                            AnswerId = 8,
                            Id = 8
                        },
                        new
                        {
                            QuestionId = 2,
                            AnswerId = 1,
                            Id = 9
                        },
                        new
                        {
                            QuestionId = 2,
                            AnswerId = 2,
                            Id = 10
                        },
                        new
                        {
                            QuestionId = 2,
                            AnswerId = 3,
                            Id = 11
                        },
                        new
                        {
                            QuestionId = 2,
                            AnswerId = 4,
                            Id = 12
                        },
                        new
                        {
                            QuestionId = 2,
                            AnswerId = 5,
                            Id = 13
                        },
                        new
                        {
                            QuestionId = 2,
                            AnswerId = 6,
                            Id = 14
                        },
                        new
                        {
                            QuestionId = 2,
                            AnswerId = 7,
                            Id = 15
                        },
                        new
                        {
                            QuestionId = 2,
                            AnswerId = 8,
                            Id = 16
                        });
                });

            modelBuilder.Entity("GramTrainingCoreAngular.Domain.Rules.GrRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsImage");

                    b.Property<bool>("IsYoutube");

                    b.Property<int>("Language");

                    b.Property<string>("Link");

                    b.Property<string>("RuleText");

                    b.Property<int>("Tens");

                    b.HasKey("Id");

                    b.ToTable("GrRule");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsImage = true,
                            IsYoutube = false,
                            Language = 0,
                            Link = "./assets/pitalni_slova-.jpg",
                            Tens = 0
                        });
                });

            modelBuilder.Entity("GramTrainingCoreAngular.Domain.Questions.Question", b =>
                {
                    b.HasOne("GramTrainingCoreAngular.Domain.Rules.GrRule", "Rule")
                        .WithMany("Questions")
                        .HasForeignKey("RuleId");
                });

            modelBuilder.Entity("GramTrainingCoreAngular.Domain.Questions.QuestionAnswer", b =>
                {
                    b.HasOne("GramTrainingCoreAngular.Domain.Questions.Answer", "Answer")
                        .WithMany("QuestionAnswers")
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GramTrainingCoreAngular.Domain.Questions.Question", "Question")
                        .WithMany("QuestionAnswers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
